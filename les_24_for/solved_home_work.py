"""
Домашнее задание по for
"""

# задание 1

"""
Создайте список из 5 разных крипто активностей.
Программа создает 100 кошельков с адресами в формате "0x" + 40 случайных символов из набора "abcdef0123456789".
Программа создает список балансов кошельков, которые изначально равны 0.
Программа создает список количества транзакций кошельков, которые изначально равны 0.

Программа должна сделать ровно 10 рандомных транзакций из списка активностей на каждом кошельке, по одной транзакции за 1 раз. Активности могут повторяться.
Кошельки могут отрабатываться по порядку, без рандомизации.
Если баланс кошелька нулевой программа должна выводить с биржи от 1 до 3 токенов и прибавлять к балансу.
Стоимость одной транзакции - активности = от 1 до 2 токенов (рандомно). Если денег на транзакцию не хватает,
программа должна выводить не хватающую сумму и прибавлять к балансу перед осуществлением транзакции.

"""
import random

# choices - выбирает рандомные значения из списка, k - количество значений
# создаем список из 100 кошельков
wallets = ["0x" + "".join(random.choices("abcdef0123456789", k=40)) for _ in range(100)]

balances = [0] * 100  # способ создания списка с одинаковыми значениями
transactions = [0] * 100  # способ создания списка с одинаковыми значениями
activities = ["swap", "mint", "transfer", "bridge", "burn"]  # список активностей

# запускаем цикл пока суммарно не будет по 10 транзакций на каждом кошельке
while sum(transactions) < len(wallets) * 10:

    # запускаем цикл по кошелькам и их индексам
    for index_wallet, wallet in enumerate(wallets):
        if transactions[index_wallet] >= 10:
            continue

        # если баланс кошелька нулевой
        if not balances[index_wallet]:
            print(f"Кошелек {wallet} пустой")
            tokens = random.randint(1, 3)  # выводим с биржи от 1 до 3 токенов
            balances[index_wallet] += tokens  # прибавляем к балансу
            print(f"Кошелек {wallet} получил {tokens} токенов")

        # стоимость одной транзакции
        cost = random.randint(1, 2)
        activity = random.choice(activities)

        if balances[index_wallet] < cost:
            print(f"Кошелек {wallet} не хватает {cost - balances[index_wallet]} токенов для {activity}")
            print(f"Кошелек {wallet} получил {cost - balances[index_wallet]} токенов")
            balances[index_wallet] += cost

        print(f"Кошелек {wallet} совершает транзакцию {activity} на {cost} токенов")
        balances[index_wallet] -= cost
        transactions[index_wallet] += 1

        print(f"Баланс кошелька {wallet}: {balances[index_wallet]}, количество транзакций: {transactions[index_wallet]}")


# задание 2

"""
Сгенерируйте список из 100 паролей длиной 8 символов, состоящих из цифр и маленьких букв - одной строкой кода. (подсказка: используйте random.choices)
Сгенерируйте второй список с теми же паролями, только буквы большие. (используйте исходный список паролей за основу) - одной строкой кода
Сгенерируйте третий список в котором будут лежать пароли из 2 списка в верхнем регистре у которых есть буква "D" - одной строкой кода.
"""

passwords = ["".join(random.choices("abcdef0123456789", k=8)) for _ in range(100)]
passwords_upper = [password.upper() for password in passwords]
passwords_with_d = [password for password in passwords_upper if "D" in password]







